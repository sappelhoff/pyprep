name: Python tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    branches: [master]
    tags: ['**']
  schedule:
    - cron: "0 4 * * MON"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
        mne-version: [mne-stable]

        include:
          # Test mne development version only on ubuntu
          - platform: ubuntu-latest
            python-version: "3.8"
            mne-version: mne-main
            run-as-extra: true

    runs-on: ${{ matrix.platform }}

    env:
      TZ: Europe/Berlin
      FORCE_COLOR: true
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('requirements-dev.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Install MNE-Python (development version)
      if: "matrix.mne-version == 'mne-main'"
      run: |
        pip install git+https://github.com/mne-tools/mne-python.git@main

    - name: Check installed versions
      run: |
        mne sys_info

    - name: Check formatting
      if: "matrix.platform == 'ubuntu-latest'"
      run: |
        flake8 --docstring-convention numpy .
        check-manifest .
        black . --check
        isort . --check
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    - name: Test with pytest
      run: |
        pytest tests/ --cov=pyprep/ --cov-report=xml --cov-config=setup.cfg --verbose -s

    - name: Build docs
      run: |
        make -C docs/ clean
        make -C docs/ html

    - name: Upload artifacts
      if: "matrix.platform == 'ubuntu-latest'"
      uses: actions/upload-artifact@v3
      with:
        name: docs-artifact
        path: docs/_build/html

    - name: Upload coverage report
      if: "matrix.platform == 'ubuntu-latest'"
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
