name: Python tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.platform }}

    env:
      TZ: Europe/Berlin
      FORCE_COLOR: true
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Check formatting
      if: "matrix.platform == 'ubuntu-latest'"
      run: |
        flake8 --docstring-convention numpy .
        check-manifest .
        black . --check
        isort . --check

    - name: Test with pytest
      run: |
        pytest tests/ --cov=pyprep/ --cov-report=xml --cov-config=setup.cfg --verbose -s

    - name: Build docs
      run: |
        cd docs
        make clean
        make html

    - name: Upload artifacts
      if: "matrix.platform == 'ubuntu-latest'"
      uses: actions/upload-artifact@v1
      with:
        name: docs-artifact
        path: docs/_build/html

    - name: Upload coverage report
      if: "matrix.platform == 'ubuntu-latest'"
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
